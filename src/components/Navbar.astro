---
import {Button} from "@/components/ui/button";
import {Astronav, MenuIcon, MenuItems} from "astro-navbar";
import {Switch} from "@/components/ui/switch";
import Icons from "./Icons.astro";

const menuitems = [
  {
    title: "Home",
    path: "#hero",
  },
  {
    title: "About",
    path: "#about",
  },
  {
    title: "Projects",
    path: "#projects",
  },
];
---

<header>
  <Astronav>
    <div class="flex w-full items-center justify-between lg:w-auto">
      <div class="flex items-center w-full justify-between lg:hidden">
        <MenuIcon class="h-6 w-6" />
        <div class="lg:hidden block">
          <Switch
            role="Theme Toggle"
            title="Theme Toggle"
            id="theme-switch2"
            client:load
          />
        </div>
      </div>
    </div>
    <MenuItems class="mt-2 hidden w-full lg:mt-0 lg:flex lg:w-auto">
      <ul
        class="flex flex-col justify-center items-center lg:flex-row lg:gap-3 gap-1"
      >
        {
          menuitems.map((item) => (
            <>
              <li>
                <a href={item.path} class="flex lg:py-2 lg:px-3">
                  <Button
                    className="font-bold text-xl"
                    variant="ghost"
                    size="lg"
                  >
                    {item.title}
                  </Button>
                </a>
              </li>
            </>
          ))
        }
        <li class="lg:hidden">
          <div id="onlywhennotatthetop">
            <Icons />
          </div>
        </li>
        <li class="hidden lg:block">
          <Switch
            role="Theme Toggle"
            title="Theme Toggle"
            id="theme-switch"
            client:load
          />
        </li>
      </ul>
    </MenuItems>
  </Astronav>
</header>

<script>
  document.addEventListener("DOMContentLoaded", function ready() {
    let myIcons = document.getElementById(
      "onlywhennotatthetop"
    ) as HTMLButtonElement;
    window.onscroll = function (event) {
      event.preventDefault();
      showIcons();
    };
    myIcons.style.display = "none";
    function showIcons() {
      if (
        document.body.scrollTop > 400 ||
        document.documentElement.scrollTop > 400
      ) {
        myIcons.style.display = "block";
      } else {
        myIcons.style.display = "none";
      }
    }
    const theme = document.getElementById("theme-switch");
    const theme2 = document.getElementById("theme-switch2");

    const body = document.querySelector("body");
    const header = document.querySelector("header");
    const lightTailWind = "bg-slate-200 text-slate-900 font-mono";
    const darkTailWind = "bg-slate-900 text-slate-200 font-mono";

    if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
      localStorage.setItem("theme", "dark");
      body!.className = darkTailWind;
      header!.className =
        "py-4 z-50 flex flex-col w-full px-16 items-center justify-between lg:flex-row border-b-2 fixed bg-slate-900";
    } else {
      localStorage.setItem("theme", "light");
      body!.className = lightTailWind;
      header!.className =
        "py-4  z-50 flex flex-col w-full px-16 items-center justify-between lg:flex-row border-b-2 fixed bg-slate-200";
    }

    const switchTheme = () => {
      localStorage.setItem(
        "theme",
        localStorage.getItem("theme") === "dark" ? "light" : "dark"
      );
      if (localStorage.getItem("theme") === "dark") {
        body!.className = darkTailWind;
        header!.className =
          "py-4 z-50 flex flex-col w-full px-16 items-center justify-between lg:flex-row border-b-2 fixed bg-slate-900";
      } else {
        body!.className = lightTailWind;
        header!.className =
          "py-4  z-50 flex flex-col w-full px-16 items-center justify-between lg:flex-row border-b-2 fixed bg-slate-200";
      }
    };

    if (theme) {
      theme.addEventListener("click", () => {
        switchTheme();
      });
    }
    if (theme2) {
      theme2.addEventListener("click", () => {
        switchTheme();
      });
    }
  });
</script>
